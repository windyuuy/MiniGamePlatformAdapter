{"version":3,"file":"slib.js","sourceRoot":"","sources":["../src/core/Debug.ts","../src/Interface.ts","../src/core/ATypeMap.ts","../src/core/I18N.ts","../src/core/Log.ts","../src/core/LogicChain.ts","../src/core/SafeData.ts","../src/core/SeedRandom.ts","../src/core/SimpleEvent.ts","../src/helper/BigNumberHelper.ts","../src/helper/EncryptHelper.ts","../src/helper/JSHelper.ts","../src/libs/Base64.ts","../src/libs/md5.ts","../src/libs/xxtea.ts","../src/net/BusinessClient.ts","../src/net/GameClient.ts","../src/net/HttpClient.ts","../src/net/HttpGameClient.ts","../src/net/SocketGameClient.ts","../src/net/WebSocketClient.ts","../src/test/TestSafeData.ts"],"names":[],"mappings":"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","sourcesContent":["namespace slib {\n\n\t/**\n\t * @noSelf\n\t */\n\texport function assert(cond: any, tip?: string) {\n\t\tif (!!cond) {\n\t\t\treturn cond\n\t\t} else {\n\t\t\tthrow new Error(tip)\n\t\t}\n\t}\n\n\t/**\n\t * @noSelf\n\t */\n\texport function defaultValue<T>(kv: T, dv: T): T {\n\t\treturn kv !== undefined ? kv : dv\n\t}\n}\n","/// <reference path=\"./core/Debug.ts\" />\nwindow[\"slib\"] = slib","\n/// <reference path=\"../Interface.ts\" />\nnamespace slib {\n    export type TypeMap<T> = { [key: string]: T };\n    export type StringMap = TypeMap<string>;\n}","namespace slib {\n\n    let SDKLocTable = {}\n    SDKLocTable[\"en\"] = {\n        \"welcome\": \"Welcome\",\n        \"remind_tip\": \"Friendly Tips\",\n        \"bind_fail\": \"Binding account fail\",\n        \"bind_succ\": \"Binding account success\",\n        \"ok\": \"OK\",\n        \"cancel\": \"Cancel\",\n\n    }\n\n    SDKLocTable[\"zh\"] = {\n        \"welcome\": \"欢迎\",\n        \"remind_tip\": \"友情提示\",\n        \"bind_fail\": \"绑定账号失败\",\n        \"bind_succ\": \"绑定账号成功\",\n        \"ok\": \"确定\",\n        \"cancel\": \"取消\",\n    }\n\n    SDKLocTable[\"zh-hk\"] = {\n        \"welcome\": \"歡迎\",\n        \"remind_tip\": \"友情提示\",\n        \"bind_fail\": \"綁定賬號失敗\",\n        \"bind_succ\": \"綁定賬號成功\",\n        \"ok\": \"確定\",\n        \"cancel\": \"取消\",\n    }\n\n    export class I18N {\n\n        static readonly instance = new I18N()\n\n        /**\n         * 当前语言\n         */\n        language: string = \"zh\"\n\n        /**\n         * 界面和程序所使用的语言信息\n         */\n        stringsMap: { [key: string]: string } = {}\n\n        /**\n         * 根资源路径，用于缩短路径填写\n         */\n        resRootPath: string = \"\"\n\n\n        /**\n         * 动态切换语言\n         */\n        dynChange: boolean = false\n\n        get langMap() {\n            return this.stringsMap;\n        }\n\n        /**\n         * 应用语言表\n         * @param data 语言列表 必须是 key value 的形式的数组 或是个map\n         */\n        applyTable(data: { key: string, value: string }[] | { [key: string]: string }) {\n            this.stringsMap = {}\n            if (data instanceof Array) {\n                for (let v of data) {\n                    this.stringsMap[v.key] = v.value\n                }\n            } else {\n                for (let k in data) {\n                    this.stringsMap[k] = data[k]\n                }\n            }\n        }\n\n        /**\n         * 根据key获取文字内容\n         * @param key 查询键\n         * @param defaultValue 默认值\n         */\n        locConfig(configRow: any, key: string): string | Function {\n            if (this.dynChange) {\n                let retFunc = () => {\n                    return configRow[key]\n                }\n\n                retFunc.toString = () => {\n                    return retFunc()\n                }\n                retFunc[\"replace\"] = (searchValue, replaceValue) => {\n                    let retStr = retFunc()\n                    return retStr.replace(searchValue, replaceValue)\n                }\n\n                retFunc[\"search\"] = (searcher) => {\n                    let retStr = retFunc()\n                    return retStr.search(searcher)\n                }\n\n                retFunc[\"split\"] = (seperator, limit?) => {\n                    let retStr = retFunc() as string\n                    return retStr.split(seperator, limit)\n                }\n                return retFunc\n            } else {\n                return configRow[key]\n            }\n\n        }\n\n        /**\n         * 根据key获取文字内容\n         * @param key 查询键\n         * @param defaultValue 默认值\n         */\n        locString(key: string, defaultValue?: string): string | Function {\n            if (this.dynChange) {\n                let retFunc = () => {\n                    if (this.stringsMap[key]) {\n                        return this.stringsMap[key];\n                    }\n                    else {\n                        return defaultValue || key;\n                    }\n                }\n\n                retFunc.toString = () => {\n                    return retFunc()\n                }\n                retFunc[\"replace\"] = (searchValue, replaceValue) => {\n                    let retStr = retFunc()\n                    return retStr.replace(searchValue, replaceValue)\n                }\n\n                retFunc[\"search\"] = (searcher) => {\n                    let retStr = retFunc()\n                    return retStr.search(searcher)\n                }\n\n                retFunc[\"split\"] = (seperator, limit?) => {\n                    let retStr = retFunc() as string\n                    return retStr.split(seperator, limit)\n                }\n                return retFunc\n            } else {\n                if (this.stringsMap[key]) {\n                    return this.stringsMap[key]\n                } else {\n                    return defaultValue || key\n                }\n            }\n\n        }\n\n        /**\n         * 根据多语言数据格式化文本\n         * ###例如\n         * * key=\"pet.get\"\n         * * value=\"恭喜你获得${petName},好好保护它吧！\"\n         * * format(\"pet.get\",\"恭喜你获得${petName},好好保护它吧！\",{petName:\"波波\"}) 得到 \"恭喜你获得波波,好好保护它吧！\"\n         * @param key 语言key\n         * @param defaultValueOrArgs 默认值\n         * @param args 参数，支持字符串数组\n         */\n        format(key: string, defaultValueOrArgs: string | { [key: string]: any }, argsMap?: {\n            [key: string]: any\n        }) {\n            if (this.dynChange) {\n                let retFunc = () => {\n                    let defaultValue = argsMap == null ? undefined : defaultValueOrArgs as string;\n                    let args = argsMap == null ? defaultValueOrArgs : argsMap;\n                    //以 ${} 作为替换词匹配\n                    var valueFunc = this.locString(key, defaultValue) as Function;\n                    let value = valueFunc()\n                    var list = value.match(/\\${[a-zA-Z0-9]+}/g);\n                    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n                        var m = list_1[_i];\n                        var key_1 = m.replace(/\\$|{|}/g, \"\");\n                        value = value.replace(m, String(args[key_1]));\n                    }\n                    return value;\n                }\n                retFunc.toString = () => {\n                    return retFunc()\n                }\n\n                retFunc[\"replace\"] = (searchValue, replaceValue) => {\n                    let retStr = retFunc()\n                    return retStr.replace(searchValue, replaceValue)\n                }\n\n                retFunc[\"search\"] = (searcher) => {\n                    let retStr = retFunc()\n                    return retStr.search(searcher)\n                }\n\n                retFunc[\"split\"] = (seperator, limit?) => {\n                    let retStr = retFunc() as string\n                    return retStr.split(seperator, limit)\n                }\n                return retFunc\n            } else {\n                let defaultValue = argsMap == null ? undefined : defaultValueOrArgs as string;\n                let args = argsMap == null ? defaultValueOrArgs : argsMap;\n                //以 ${} 作为替换词匹配\n                let value = this.locString(key, defaultValue) as string;\n                let list = value.match(/\\${[a-zA-Z0-9]+}/g)\n                for (let m of list) {\n                    let key = m.replace(/\\$|{|}/g, \"\")\n                    value = value.replace(m, String(args[key]));\n                }\n                return value;\n            }\n\n        }\n\n        /**\n         * 获取资源url，结果等于 resRootPath+value\n         * @param url \n         */\n        locUrl(url: string): string {\n            let rootPath = this.resRootPath.replace(/\\/+$/g, \"\");//去除结尾的/\n            let path = url.replace(new RegExp(rootPath + \"/[a-zA-Z0-9-_]+/\"), rootPath + \"/\" + this.language + \"/\")\n            return path\n            //let url = slib.i18n.locString(key);\n            //return (this.resRootPath + \"/\" + this.language + \"/\" + url).replace(/\\/+/g, \"/\");//去除多余的/\n        }\n\n        /**\n         * 对sdk 用到的字符串做local\n         * @param url \n         */\n        locSDKString(key: string, lang?: string): string {\n            lang = lang ? lang : this.language\n            if (SDKLocTable[lang] == null) {\n                lang = \"zh\" // to default\n            }\n            let ret = SDKLocTable[lang][key]\n            return ret ? ret : \"\"\n        }\n\n    }\n\n    export var i18n = I18N.instance\n}","namespace slib {\n\n    type LogParam = { time?: boolean, tags?: string[] }\n\n    export class Log {\n\n        private static _enablePlaneLog: boolean = false;\n        public static get enablePlaneLog(): boolean {\n            return Log._enablePlaneLog;\n        }\n        public static toPlaneLog(args: any[]) {\n            const plainTexts = []\n            for (let info of args) {\n                let ret = ''\n                if (info instanceof Error) {\n                    ret = `Error content: ${JSON.stringify(info)}\\n${info.stack}`\n                } else if (info instanceof Object) {\n                    ret = JSON.stringify(info)\n                } else {\n                    ret = info\n                }\n                plainTexts.push(ret)\n            }\n\n            return plainTexts\n        }\n\n        public static set enablePlaneLog(value: boolean) {\n            Log._enablePlaneLog = value;\n            if (value) {\n                const logOld = console.log\n                const warnOld = console.warn\n                const errorOld = console.error\n                console['logOld'] = console['logOld'] || logOld\n                console['warnOld'] = console['warnOld'] || warnOld\n                console['errorOld'] = console['errorOld'] || errorOld\n                console.log = function (...args) {\n                    const plainTexts = Log.toPlaneLog(args)\n                    logOld.apply(console, plainTexts)\n                }\n\n                console.warn = function (...args) {\n                    const plainTexts = Log.toPlaneLog(args)\n                    warnOld.apply(console, plainTexts)\n                }\n\n                console.error = function (...args) {\n                    const plainTexts = Log.toPlaneLog(args)\n                    errorOld.apply(console, plainTexts)\n                }\n            } else {\n                if (console['logOld']) {\n                    console.log = console['logOld']\n                }\n                if (console['warnOld']) {\n                    console.warn = console['warnOld']\n                }\n                if (console['errorOld']) {\n                    console.error = console['errorOld']\n                }\n            }\n        }\n\n        protected static _instance: Log\n        public static get instance(): Log {\n            if (!this._instance)\n                this._instance = new Log();\n            return this._instance;\n        }\n\n        protected time?: boolean\n        protected tags?: string[]\n\n        constructor({ time, tags }: LogParam = {}) {\n            this.time = time\n            if (tags) {\n                this.tags = tags.concat()\n            }\n        }\n\n        /**\n         * 将消息打印到控制台，不存储至日志文件\n         */\n        info(...args) {\n            if (this.tags) {\n                args = this.tags.concat(args)\n            }\n            if (this.time) {\n                args.push(new Date().getTime())\n            }\n            console.log(' ', ...args);\n        }\n\n        /**\n         * 将消息打印到控制台，并储至日志文件\n         */\n        warn(...args) {\n            if (this.tags) {\n                args = this.tags.concat(args)\n            }\n            if (this.time) {\n                args.push(new Date().getTime())\n            }\n            console.warn(' ', ...args);\n        }\n\n        /**\n         * 将消息打印到控制台，并储至日志文件\n         */\n        error(...args) {\n            if (this.tags) {\n                args = this.tags.concat(args)\n            }\n            if (this.time) {\n                args.push(new Date().getTime())\n            }\n            console.error(' ', ...args);\n            for (let p of args) {\n                if (p instanceof Error) {\n                    console.log(p.stack)\n                }\n            }\n            console.log('>>>error')\n            console.log(new Error().stack)\n        }\n\n    }\n\n    export var log = Log.instance\n\n}","namespace slib {\n\n    export class LogicResult {\n        success: boolean = true;//执行结果\n        nextData: any = null;//向下传递的数据\n    }\n\n    export class LogicChainItem {\n        constructor() {\n\n        }\n\n        /**\n         * 子类需要实现该函数\n         */\n        public async logic(data: any): Promise<LogicResult> {\n            return new Promise<LogicResult>((resolve, reject) => { resolve(new LogicResult()) })\n        }\n    }\n\n    export class LogicChain {\n        protected _itemList: LogicChainItem[] = [];\n\n        protected _progress: (current: number, total: number) => void = null;\n\n        constructor() {\n\n        }\n\n        /**\n         * 链接下一个逻辑\n         * @param next \n         */\n        link(next: LogicChainItem) {\n            this._itemList.push(next)\n            return this;\n        }\n\n        /**\n         * 执行逻辑并返回结果\n         */\n        async execute(data: any) {\n            for (let i = 0; i < this._itemList.length; i++) {\n                let item = this._itemList[i]\n                let result = await item.logic(data);\n                if (!result.success) {\n                    return;\n                }\n                data = result.nextData;\n                if (this._progress) {\n                    this._progress(i + 1, this._itemList.length);\n                }\n            }\n        }\n\n        /**\n         * 获取逻辑链进度函数\n         */\n        get progress() {\n            return this._progress\n        }\n\n        /**\n         * 设置逻辑链进度函数\n         */\n        set progress(value) {\n            this._progress = value\n        }\n    }\n}","\nnamespace slib {\n\n    const ox8000 = 0x8000\n    // ------------------ B ------------------\n    function bshift23encodeV2(s) {\n        let s1t = []\n        for (let i = 0; i < s.length; i++) {\n            const code = s.charCodeAt(i)\n            if (code < ox8000) {\n                s1t.push(String.fromCharCode((code + 23) % ox8000))\n                // console.log('code1:', code)\n            } else {\n                s1t.push(String.fromCharCode(ox8000))\n                s1t.push(String.fromCharCode((code + 23 - ox8000) % ox8000))\n                // console.log(\"code:\", code)\n            }\n        }\n        return s1t.join(\"\")\n    }\n\n    function bshift23decodeV2(s) {\n        let s1t = []\n        for (let i = 0; i < s.length; i++) {\n            const code1 = s.charCodeAt(i)\n            if (code1 < ox8000) {\n                const value = (code1 - 23 + ox8000) % ox8000\n                s1t.push(String.fromCharCode(value))\n                // console.log('decode1:', value)\n            } else {\n                i++\n                const code2 = s.charCodeAt(i)\n                const value = (code2 - 23 + ox8000) % ox8000 + code1\n                s1t.push(String.fromCharCode(value))\n                // console.log('decode:', value)\n            }\n        }\n        return s1t.join(\"\")\n    }\n\n    // ------------------ B ------------------\n    function bshift23encode(s) {\n        let s1t = []\n        for (let c of s) {\n            s1t.push(String.fromCharCode((c.charCodeAt() + 23) % 65536))\n        }\n        return s1t.join(\"\")\n    }\n\n    function bshift23decode(s) {\n        let s1t = []\n        for (let c of s) {\n            s1t.push(String.fromCharCode((c.charCodeAt() - 23) % 65536))\n        }\n        return s1t.join(\"\")\n    }\n\n    function b64decode(s) {\n        s = s.split(\"\").reverse().join(\"\")\n        return Base64.decode(s)\n    }\n\n    function encode(value, log = false) {\n        let type = typeof value\n        if (type == \"number\") {\n            //对数字进行加密\n            if (value % 1 === 0) {\n                return \"a\" + bshift23encode(value.toString(16))\n            } else {\n                return \"A\" + bshift23encode(value.toString())\n            }\n\n        } else if (type == \"string\") {\n            //对字符串进行加密\n            return \"S\" + bshift23encodeV2(value);\n        } else if (type == \"boolean\") {\n            //对布尔值进行加密\n            return value ? \"f\" : \"t\"\n        } else {\n            return value\n        }\n    }\n\n    function decode(value, log = false) {\n        let type = typeof value\n        if (type == \"string\") {\n            let type = value[0]\n            value = value.substr(1);\n            if (type == \"A\") {\n                return parseFloat(bshift23decode(value))\n            } else if (type == \"a\") {\n                //解密数字\n                return parseInt(bshift23decode(value), 16)\n            } else if (type == \"R\") {\n                //解密字符串\n                return bshift23decode(value);\n            } else if (type == \"S\") {\n                //解密字符串\n                return bshift23decodeV2(value);\n            } else if (type == \"f\") {\n                return true;\n            } else if (type == \"t\") {\n                return false;\n            } else if (type == \"N\") {\n                return parseFloat(b64decode(value))\n            } else if (type == \"n\") {\n                //解密数字\n                let [left, right] = value.split(\"I\")\n                left = ~-parseInt(left, 36)\n                let rr = ~-parseInt(right, 36)\n                right = rr / Math.pow(10, rr.toString().length)\n                return left >= 0 ? left + right : left - right\n            } else if (type == \"s\") {\n                //解密字符串\n                return b64decode(value);\n            }\n        } else {\n            return value\n        }\n    }\n\n    // ------------------------ B ----------------------\n\n    window[\"encode\"] = encode\n    window[\"decode\"] = decode\n\n    let _userId: number | undefined\n    let _dynamicKey: number | undefined\n\n    function build(target, property) {\n        let value = target[property]\n        let type = typeof value\n\n        delete target[property]\n        Object.defineProperty(target, property, {\n            get: function () {\n                return decode(dynamicDecode(this[\"__\" + property + \"__\"], property))\n            },\n            set: function (value) {\n                this[\"__\" + property + \"__\"] = dynamicEncode(encode(value), property)\n            }\n        });\n    }\n\n    /**\n     * 数据工厂类，所有数据类都会被保存到该地方，之后可以通过Key来实例化数据\n     */\n    export class DataFactory {\n        static readonly instance: DataFactory = new DataFactory;\n        protected _creatorMap: { [key: string]: () => void } = {};\n        protected _creatorList: { className: string, creator: () => Object }[] = [];\n        constructor() {\n\n        }\n        addCreator(className: string, creator: () => Object) {\n            this._creatorMap[className] = creator;\n            this._creatorList.push({ className: className, creator: creator });\n        }\n\n        create(className): Object {\n            let creator = this._creatorMap[className];\n            if (creator) {\n                return new creator();\n            }\n            return null;\n        }\n        get creatorList() {\n            return this._creatorList;\n        }\n    }\n\n    /**@noSelf */\n    export function setDynamicDecodeKey(key?: number, userId?: number) {\n        _userId = userId\n        _dynamicKey = key\n    }\n\n    /**@noSelf */\n    export function dynamicDecode(value: any, valueName: string) {\n        if (_dynamicKey && _userId) {\n            if (typeof value === \"string\") {\n                let ret = []\n                let pa = valueName.charCodeAt(valueName.length - 1) & 23\n                let pb = (_userId + _dynamicKey) & 17\n                for (let i = 0; i < value.length / 2; i++) {\n                    ret.push(String.fromCharCode((value[i * 2 + 1].charCodeAt(0) - ((value[i * 2].charCodeAt(0) >> 2) & 31) - pa - pb)))\n                }\n                return ret.join(\"\")\n            } else if (value instanceof Array) {\n                for (let i = 0; i < value.length; i++) {\n                    value[i] = decode(dynamicDecode(value[i], valueName + i))\n                }\n                return value\n            } else {\n                return value\n            }\n        } else {\n            return value\n        }\n    }\n\n    /**@noSelf */\n    export function dynamicEncode(value: any, valueName: string, userId?: number, dynamicKey?: number) {\n        userId = userId || _userId\n        dynamicKey = dynamicKey || _dynamicKey\n        if (userId && dynamicKey) {\n            if (typeof value === \"string\") {\n                let ret = []\n                let pa = valueName.charCodeAt(valueName.length - 1) & 23\n                let pb = (userId + dynamicKey) & 17\n                for (let i = 0; i < value.length; i++) {\n                    let v = math.random(255)\n                    ret.push(String.fromCharCode(v))\n                    ret.push(String.fromCharCode((value[i].charCodeAt(0) + ((v >> 2) & 31) + pa + pb)))\n                }\n                return ret.join(\"\")\n            } else if (value instanceof Array) {\n                for (let i = 0; i < value.length; i++) {\n                    value[i] = dynamicEncode(encode(value[i]), valueName + i, userId, dynamicKey)\n                }\n                return value\n            } else {\n                return value\n            }\n        } else {\n            return value\n        }\n    }\n\n    /**\n     * 安全数据修饰符，被修饰的类的属性会被加密\n     * @param className 类名 由于代码混淆后无法拿到准确的类名，因此需要手动传入\n     * @noSelf\n     */\n    export function SafeClass(className: string): any {\n        return function (ctor: Function) {\n            var safeclass: any = function (...args) {\n                try {\n                    ctor.apply(this, args)\n                } catch (e) {\n                    console.error(`@SafeClass(${className})(`, args, `)构造失败`)\n                    throw e\n                }\n\n                for (let key in this) {\n                    if (this.hasOwnProperty(key)) {\n                        let value = this[key]\n                        let type = typeof value\n                        build(this, key);\n                        this[key] = value;\n                    }\n\n                }\n                this._classname_ = className;\n\n                return this;\n            }\n\n            safeclass.prototype = ctor.prototype;\n            DataFactory.instance.addCreator(className, safeclass);\n\n            //复制静态属性\n            let propertys = Object.getOwnPropertyNames(ctor)\n            for (let name of propertys) {\n                if ([\"length\", \"name\", \"prototype\", \"arguments\"].indexOf(name) != -1)\n                    continue;//这些属性在某些环境下不能进行复制  如 ios10\n                try {\n                    let obj = Object.getOwnPropertyDescriptor(ctor, name)\n                    Object.defineProperty(safeclass, name, obj);\n                } catch (e) {\n                    console.error(\"SafeData copy static Property error\", name, e);\n                }\n            }\n\n            return safeclass;\n        }\n    }\n\n    /**\n     * 类存储修饰符，被反序列化时会自动匹配上该类\n     * @param className \n     */\n    export function StorageClass(className: string): any {\n        return function (ctor: any) {\n            ctor.prototype[\"_classname_\"] = className\n            DataFactory.instance.addCreator(className, ctor);\n        }\n    }\n\n    /**\n     * 对某个属性进行加密\n     * @param target 对象\n     * @param property 对象的属性\n     * @noSelf\n     */\n    export function SafeProperty(target: object, property: string) {\n        let value = target[property]\n        build(target, property)\n        target[property] = value;\n    }\n\n    /**\n     * 解密数据表行\n     * @param objf 获取对象\n     * @param fieldMap 表的字段列表\n     * @param ekey 解密key\n     * @param datastr 数据字符串\n     * @param unzip 是否需要解压数据\n     */\n    export function decryptTable(objf: () => object, fieldMap: string[], ekey: string, datastr: string, unzip: boolean = false): any[] {\n\n        let str = null\n        if (unzip) {\n            let bytes = slib.xxtea.decrypt(datastr, ekey)\n            str = pako.inflate(bytes, { to: 'string' })\n        } else {\n            str = xxtea.decryptFromBase64(datastr, ekey)\n        }\n\n        let data = JSON.parse(str)\n        let config: any[] = []\n        for (let record of data) {\n            let obj = objf()\n            for (let i = 0; i < fieldMap.length; i++) {\n                let key = fieldMap[i]\n                obj[key] = record[i]\n            }\n            config.push(obj)\n        }\n        return config\n    }\n}","namespace slib {\n    /**\n     * * 用于帧同步逻辑的实现。服务器下发一个随机数作为种子。\n     * * 客户端对种子计算得到固定的随机数序列\n     */\n    export class SeedRandom {\n        min: number = 0\n        max: number = 1000000\n        seed: number;//当前的种子\n        constructor(startSeed) {\n            this.seed = startSeed\n        }\n\n        /**\n         * 创建新的随机数 范围为0~1\n         */\n        next(): number {\n            this.seed = (this.seed * 9301 + 49297) % 233280;\n            return this.seed / 233280.0;\n        }\n    }\n}","namespace slib {\n\texport type EventHandler<T> = (message: T) => void\n\texport class SimpleEvent<T> {\n\t\tprotected _callbacks: EventHandler<T>[] = []\n\t\ton(callback: EventHandler<T>) {\n\t\t\tthis._callbacks.push(callback)\n\t\t}\n\n\t\toff(callback: EventHandler<T>) {\n\t\t\tthis._callbacks.splice(this._callbacks.indexOf(callback), 1)\n\t\t}\n\n\t\temit(value: T) {\n\t\t\tthis._callbacks.concat().forEach((callback) => {\n\t\t\t\tcallback(value)\n\t\t\t})\n\t\t}\n\t}\n\n\texport interface SEventInput<T> {\n\t\temit(key: string, value: T)\n\t}\n\n\texport interface SEventOutput<T> {\n\t\ton(key: string, callback: EventHandler<T>)\n\t\toff(key: string, callback: EventHandler<T>)\n\t}\n\n\texport class SEvent<T> implements SEventInput<T>, SEventOutput<T>{\n\t\tprotected _events: { [key: string]: SimpleEvent<T> } = {}\n\n\t\ton(key: string, callback: EventHandler<T>) {\n\t\t\tif (!this._events[key]) {\n\t\t\t\tthis._events[key] = new SimpleEvent<T>()\n\t\t\t}\n\t\t\tconst event = this._events[key]\n\t\t\tevent.on(callback)\n\t\t}\n\n\t\toff(key: string, callback: EventHandler<T>) {\n\t\t\tif (callback == undefined) {\n\t\t\t\tthis._events[key] = undefined\n\t\t\t} else {\n\t\t\t\tconst event = this._events[key]\n\t\t\t\tevent.off(callback)\n\t\t\t}\n\t\t}\n\n\t\temit(key: string, value: T) {\n\t\t\tif (this._events[key]) {\n\t\t\t\tconst event = this._events[key]\n\t\t\t\tevent.emit(value)\n\t\t\t}\n\t\t}\n\t}\n}\n","namespace slib {\n\n\n    let unitNum = [null, 'K', 'M', 'B', 'T', 'aa', 'bb', 'cc', 'dd', 'ee', 'ff', 'gg', 'hh', 'ii', 'jj', 'kk', 'll', 'mm', 'nn', 'oo', 'pp', 'qq', 'rr', 'ss', 'tt', 'uu', 'vv', 'ww', 'xx', 'yy', 'zz', 'Aa', 'Bb', 'Cc', 'Dd', 'Ee', 'Ff', 'Gg', 'Hh', 'Ii', 'Jj', 'Kk', 'Ll', 'Mm', 'Nn', 'Oo', 'Pp', 'Qq', 'Rr', 'Ss', 'Tt', 'Uu', 'Vv', 'Ww', 'Xx', 'Yy', 'Zz', 'AA', 'BB', 'CC', 'DD', 'EE', 'FF', 'GG', 'HH', 'II', 'JJ', 'KK', 'LL', 'MM', 'NN', 'OO', 'PP', 'QQ', 'RR', 'SS', 'TT', 'UU', 'VV', 'WW', 'XX', 'YY', 'ZZ']\n    let unitNumBigMap = [];\n    for (let i = 0; i < unitNum.length; i++) {\n        unitNumBigMap.push(new BigNumber(\"1\" + \"0\".repeat(i * 3)))\n    }\n\n    export class BigNumberHelper {\n\n        static convertUnitNumber(gold: number, unit?: string): BigNumber {\n            if (unit == null || unit == \"\" || unit == \"undefined\") {\n                return new BigNumber(gold)\n            }\n            let index = unitNum.indexOf(unit);\n            if (index == -1) {\n                index = 0;\n            }\n            let unitObj = unitNumBigMap[index]\n            assert(unitObj)\n            return unitObj.multipliedBy(gold)\n        }\n        static convertUnitString(value: string): BigNumber {\n            let matchList = value.match(/[a-zA-Z]+/)\n            if (!matchList || matchList.length == 0) {\n                return new BigNumber(value)\n            } else {\n                let unit = matchList[0]\n                let num = parseFloat(value)\n                return this.convertUnitNumber(num, unit);\n            }\n        }\n\n        static convertNumStr2UnitStr(value: string, offset: number = 0, fixedNum: number = 2): string {\n            value = value.split('.')[0]\n            let count = Math.floor((value.length - 1) / 3);\n            if (count == 0) {\n                return value;\n            }\n            count -= offset;\n            // var unitObj = unitconfig.where(a => a.unitid == count).single\n            let unit = unitNum[count]\n            if (unit == null) {//兼容 显示最后的单位\n                count = unitNum.length - 1;\n                unit = unitNum[count]\n            }\n\n            let expdiv = count * 3\n            const zlen = value.length - expdiv\n            let znum = value.substr(0, zlen)\n            let fnum = value.substr(zlen, fixedNum)\n            if (fnum.lastIndexOf('00') == (fixedNum - 2) || !fnum) {\n                return `${znum}${unit || ''}`\n            } else {\n                return `${znum}.${fnum}${unit || ''}`\n            }\n            return null\n        }\n\n    }\n\n}","namespace slib.EncryptHelper {\n\t/**\n\t * 加密时，是否开启压缩\n\t */\n\texport var enableZip: boolean = false\n\n\t/**\n\t * @noSelf\n\t */\n\texport function decrypt(value: string, key: string) {\n\t\tlet info: any = {\n\t\t\tversion: \"1\"\n\t\t}\n\t\tlet endPos = -1\n\t\tif (value && value.indexOf('${') == 0 && (endPos = value.indexOf('}^')) > -1) {\n\t\t\ttry {\n\t\t\t\tinfo = JSON.parse(value.substr(2, endPos - 2))\n\t\t\t\tvalue = value.substr(endPos + 2)\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error('JSON.parse string failed, rawdata: ', value)\n\t\t\t\tthrow e\n\t\t\t}\n\t\t}\n\t\tlet result: string\n\t\tif (\"1\" < info.version && info.version < \"3\") {\n\t\t\tlet bytes = slib.xxtea.decrypt(value, key)\n\t\t\tresult = pako.inflate(bytes, { to: 'string' })\n\t\t} else {\n\t\t\tresult = slib.xxtea.decryptFromBase64Ex1(value, key)\n\t\t}\n\n\t\t//移除\\u0000的异常\n\t\tlet oldLength = result.length\n\t\tresult = result.replace(/[\\u0000-\\u001f]/g, \"\")//匹配0~31的字符\n\n\t\tif (oldLength != result.length) {\n\t\t\tconsole.error(\"存档发现0-31的字符\");\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @noSelf\n\t */\n\texport function encrypt(value: string, key: string, extdata: any = null) {\n\n\t\tif (enableZip && value) {\n\t\t\tlet info: any = {\n\t\t\t\tversion: '2'\n\t\t\t}\n\n\t\t\tif (extdata) {\n\t\t\t\tfor (let k in extdata) {\n\t\t\t\t\tinfo[k] = extdata[k]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst rawvalue = value\n\t\t\tconst deflateValue = pako.deflate(rawvalue)\n\t\t\tvalue = '${' + JSON.stringify(info) + '}^' + slib.xxtea.encryptToString(deflateValue, key)\n\t\t\tconsole.log(`compressed result: ${rawvalue.length} -> ${deflateValue.length} -> ${value.length}`)\n\t\t} else {\n\t\t\tvalue = slib.xxtea.encryptToBase64Ex1(value, key)\n\t\t}\n\t\treturn value\n\t}\n}","namespace slib.JSHelper {\n\n\t/**\n\t * @noSelf\n\t */\n\texport function clone<T extends Object>(srcObj: T): T {\n\t\tslib.assert(typeof srcObj == 'object', 'srcObj is not a table for clone')\n\t\tlet destObj = <T>{}\n\t\tfor (let key in srcObj) {\n\t\t\tif (key != undefined) {\n\t\t\t\tdestObj[key] = srcObj[key]\n\t\t\t}\n\t\t}\n\t\treturn destObj\n\t}\n\n\t/**\n\t * @noSelf\n\t */\n\texport function merge<T extends Object>(srcObj: Object, destObj: T): T {\n\t\tslib.assert(typeof srcObj == 'object', 'srcObj is not a table for merge')\n\t\tslib.assert(typeof destObj == 'object', 'destObj is not a table for merge')\n\n\t\tfor (let key in srcObj) {\n\t\t\tif (key != undefined) {\n\t\t\t\tdestObj[key] = srcObj[key]\n\t\t\t}\n\t\t}\n\n\t\treturn destObj\n\t}\n\n\t/**\n\t * @noSelf\n\t */\n\texport function repack(a: any) {\n\t\treturn window[\"repack$-\"][a];\n\t}\n}\n","namespace slib {\n\n    // existing version for noConflict()\n\n    var global = window;\n    var _Base64 = global['Base64'];\n    var version = \"2.4.5\";\n    // if node.js, we use Buffer\n    var buffer;\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function (bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function (c) {\n        if (c.length < 2) {\n            var cc: any = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                    + fromCharCode(0x80 | (cc & 0x3f)))\n                    : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                        + fromCharCode(0x80 | ((cc >>> 6) & 0x3f))\n                        + fromCharCode(0x80 | (cc & 0x3f)));\n        } else {\n            var cc: any = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                + fromCharCode(0x80 | ((cc >>> 6) & 0x3f))\n                + fromCharCode(0x80 | (cc & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function (u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function (ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n            ord = ccc.charCodeAt(0) << 16\n                | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n                | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n            chars = [\n                b64chars.charAt(ord >>> 18),\n                b64chars.charAt((ord >>> 12) & 63),\n                padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n                padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n            ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function (b) {\n        return global.btoa(b);\n    } : function (b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function (u) {\n            return (u.constructor === buffer.constructor ? u : buffer.from(u))\n                .toString('base64')\n        }\n            : function (u) {\n                return (u.constructor === buffer.constructor ? u : new buffer(u))\n                    .toString('base64')\n            }\n        : function (u) { return btoa(utob(u)) }\n        ;\n    var encode = function (u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function (m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function (u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function (cccc) {\n        switch (cccc.length) {\n            case 4:\n                var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                    | ((0x3f & cccc.charCodeAt(1)) << 12)\n                    | ((0x3f & cccc.charCodeAt(2)) << 6)\n                    | (0x3f & cccc.charCodeAt(3)),\n                    offset = cp - 0x10000;\n                return (fromCharCode((offset >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n            case 3:\n                return fromCharCode(\n                    ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    | (0x3f & cccc.charCodeAt(2))\n                );\n            default:\n                return fromCharCode(\n                    ((0x1f & cccc.charCodeAt(0)) << 6)\n                    | (0x3f & cccc.charCodeAt(1))\n                );\n        }\n    };\n    var btou = function (b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function (cccc) {\n        var len = cccc.length,\n            padlen = len % 4,\n            n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n                | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n                | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0)\n                | (len > 3 ? b64tab[cccc.charAt(3)] : 0),\n            chars = [\n                fromCharCode(n >>> 16),\n                fromCharCode((n >>> 8) & 0xff),\n                fromCharCode(n & 0xff)\n            ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function (a) {\n        return global.atob(a);\n    } : function (a) {\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ?\n        buffer.from && buffer.from !== Uint8Array.from ? function (a) {\n            return (a.constructor === buffer.constructor\n                ? a : buffer.from(a, 'base64')).toString();\n        }\n            : function (a) {\n                return (a.constructor === buffer.constructor\n                    ? a : new buffer(a, 'base64')).toString();\n            }\n        : function (a) { return btou(atob(a)) };\n    var decode = function (a) {\n        return _decode(\n            String(a).replace(/[-_]/g, function (m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function () {\n        var Base64 = global['Base64'];\n        global['Base64'] = _Base64;\n        return Base64;\n    };\n    // export Base64\n    export var Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n}\n","namespace slib {\n\n    /*\n    * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n    * Digest Algorithm, as defined in RFC 1321.\n    * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n    * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n    * Distributed under the BSD License\n    * See http://pajhome.org.uk/crypt/md5 for more info.\n    */\n\n    /*\n    * Configurable variables. You may need to tweak these to be compatible with\n    * the server-side, but the defaults work in most cases.\n    */\n    var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n    var b64pad = \"\";  /* base-64 pad character. \"=\" for strict RFC compliance   */\n\n    /*\n    * These are the functions you'll usually want to call\n    * They take string arguments and return either hex or base-64 encoded strings\n    */\n    var hex_md5 = function (s) { return rstr2hex(rstr_md5(str2rstr_utf8(s))); }\n    var b64_md5 = function (s) { return rstr2b64(rstr_md5(str2rstr_utf8(s))); }\n    var any_md5 = function (s, e) { return rstr2any(rstr_md5(str2rstr_utf8(s)), e); }\n    var hex_hmac_md5 = function (k, d) { return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }\n    var b64_hmac_md5 = function (k, d) { return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d))); }\n    var any_hmac_md5 = function (k, d, e) { return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e); }\n\n    /*\n    * Perform a simple self-test to see if the VM is working\n    */\n    function md5_vm_test() {\n        return hex_md5(\"abc\").toLowerCase() == \"900150983cd24fb0d6963f7d28e17f72\";\n    }\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    function rstr_md5(s) {\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n    }\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    function rstr_hmac_md5(key, data) {\n        var bkey = rstr2binl(key);\n        if (bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);\n\n        var ipad = Array(16), opad = Array(16);\n        for (var i = 0; i < 16; i++) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n\n        var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n    }\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    function rstr2hex(input) {\n        try { hexcase } catch (e) { hexcase = 0; }\n        var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n        var output = \"\";\n        var x;\n        for (var i = 0; i < input.length; i++) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F)\n                + hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    }\n\n    /*\n    * Convert a raw string to a base-64 string\n    */\n    function rstr2b64(input) {\n        try { b64pad } catch (e) { b64pad = ''; }\n        var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n        var output = \"\";\n        var len = input.length;\n        for (var i = 0; i < len; i += 3) {\n            var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n            for (var j = 0; j < 4; j++) {\n                if (i * 8 + j * 6 > input.length * 8) output += b64pad;\n                else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n            }\n        }\n        return output;\n    }\n\n    /*\n    * Convert a raw string to an arbitrary string encoding\n    */\n    function rstr2any(input, encoding) {\n        var divisor = encoding.length;\n        var i, j, q, x, quotient;\n\n        /* Convert to an array of 16-bit big-endian values, forming the dividend */\n        var dividend = Array(Math.ceil(input.length / 2));\n        for (i = 0; i < dividend.length; i++) {\n            dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n        }\n\n        /*\n        * Repeatedly perform a long division. The binary array forms the dividend,\n        * the length of the encoding is the divisor. Once computed, the quotient\n        * forms the dividend for the next step. All remainders are stored for later\n        * use.\n        */\n        var full_length = Math.ceil(input.length * 8 /\n            (Math.log(encoding.length) / Math.log(2)));\n        var remainders = Array(full_length);\n        for (j = 0; j < full_length; j++) {\n            quotient = Array();\n            x = 0;\n            for (i = 0; i < dividend.length; i++) {\n                x = (x << 16) + dividend[i];\n                q = Math.floor(x / divisor);\n                x -= q * divisor;\n                if (quotient.length > 0 || q > 0)\n                    quotient[quotient.length] = q;\n            }\n            remainders[j] = x;\n            dividend = quotient;\n        }\n\n        /* Convert the remainders to the output string */\n        var output = \"\";\n        for (i = remainders.length - 1; i >= 0; i--)\n            output += encoding.charAt(remainders[i]);\n\n        return output;\n    }\n\n    /*\n    * Encode a string as utf-8.\n    * For efficiency, this assumes the input is valid utf-16.\n    */\n    function str2rstr_utf8(input) {\n        var output = \"\";\n        var i = -1;\n        var x, y;\n\n        while (++i < input.length) {\n            /* Decode utf-16 surrogate pairs */\n            x = input.charCodeAt(i);\n            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n                i++;\n            }\n\n            /* Encode output as utf-8 */\n            if (x <= 0x7F)\n                output += String.fromCharCode(x);\n            else if (x <= 0x7FF)\n                output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            else if (x <= 0xFFFF)\n                output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            else if (x <= 0x1FFFFF)\n                output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n        }\n        return output;\n    }\n\n    /*\n    * Encode a string as utf-16\n    */\n    function str2rstr_utf16le(input) {\n        var output = \"\";\n        for (var i = 0; i < input.length; i++)\n            output += String.fromCharCode(input.charCodeAt(i) & 0xFF,\n                (input.charCodeAt(i) >>> 8) & 0xFF);\n        return output;\n    }\n\n    function str2rstr_utf16be(input) {\n        var output = \"\";\n        for (var i = 0; i < input.length; i++)\n            output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                input.charCodeAt(i) & 0xFF);\n        return output;\n    }\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    function rstr2binl(input) {\n        var output = Array(input.length >> 2);\n        for (var i = 0; i < output.length; i++)\n            output[i] = 0;\n        for (var i = 0; i < input.length * 8; i += 8)\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        return output;\n    }\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    function binl2rstr(input) {\n        var output = \"\";\n        for (var i = 0; i < input.length * 32; i += 8)\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        return output;\n    }\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    function binl_md5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return Array(a, b, c, d);\n    }\n\n    /*\n    * These functions implement the four basic operations the algorithm uses.\n    */\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    function bit_rol(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n\n\n    export var MD5 = {\n        hex: hex_md5,\n        b64: b64_md5,\n        any: any_md5,\n        hex_hmac: hex_hmac_md5,\n        b64_hmac: b64_hmac_md5,\n        any_hmac: any_hmac_md5,\n    }\n}\n","namespace slib {\n    let makeModule = function (global) {\n        'use strict';\n\n        if (typeof (global.btoa) == \"undefined\") {\n            global.btoa = function () {\n                var base64EncodeChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n                return function (str) {\n                    var buf, i, j, len, r, l, c;\n                    i = j = 0;\n                    len = str.length;\n                    r = len % 3;\n                    len = len - r;\n                    l = (len / 3) << 2;\n                    if (r > 0) {\n                        l += 4;\n                    }\n                    buf = new Array(l);\n\n                    while (i < len) {\n                        c = str.charCodeAt(i++) << 16 |\n                            str.charCodeAt(i++) << 8 |\n                            str.charCodeAt(i++);\n                        buf[j++] = base64EncodeChars[c >> 18] +\n                            base64EncodeChars[c >> 12 & 0x3f] +\n                            base64EncodeChars[c >> 6 & 0x3f] +\n                            base64EncodeChars[c & 0x3f];\n                    }\n                    if (r == 1) {\n                        c = str.charCodeAt(i++);\n                        buf[j++] = base64EncodeChars[c >> 2] +\n                            base64EncodeChars[(c & 0x03) << 4] +\n                            \"==\";\n                    }\n                    else if (r == 2) {\n                        c = str.charCodeAt(i++) << 8 |\n                            str.charCodeAt(i++);\n                        buf[j++] = base64EncodeChars[c >> 10] +\n                            base64EncodeChars[c >> 4 & 0x3f] +\n                            base64EncodeChars[(c & 0x0f) << 2] +\n                            \"=\";\n                    }\n                    return buf.join('');\n                };\n            }();\n        }\n\n        if (typeof (global.atob) == \"undefined\") {\n            global.atob = function () {\n                var base64DecodeChars = [\n                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n                    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,\n                    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,\n                    -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n                    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,\n                    -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1\n                ];\n                return function (str) {\n                    var c1, c2, c3, c4;\n                    var i, j, len, r, l, out;\n\n                    len = str.length;\n                    if (len % 4 !== 0) {\n                        return '';\n                    }\n                    if (/[^ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\\+\\/\\=]/.test(str)) {\n                        return '';\n                    }\n                    if (str.charAt(len - 2) == '=') {\n                        r = 1;\n                    }\n                    else if (str.charAt(len - 1) == '=') {\n                        r = 2;\n                    }\n                    else {\n                        r = 0;\n                    }\n                    l = len;\n                    if (r > 0) {\n                        l -= 4;\n                    }\n                    l = (l >> 2) * 3 + r;\n                    out = new Array(l);\n\n                    i = j = 0;\n                    while (i < len) {\n                        // c1\n                        c1 = base64DecodeChars[str.charCodeAt(i++)];\n                        if (c1 == -1) break;\n\n                        // c2\n                        c2 = base64DecodeChars[str.charCodeAt(i++)];\n                        if (c2 == -1) break;\n\n                        out[j++] = String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));\n\n                        // c3\n                        c3 = base64DecodeChars[str.charCodeAt(i++)];\n                        if (c3 == -1) break;\n\n                        out[j++] = String.fromCharCode(((c2 & 0x0f) << 4) | ((c3 & 0x3c) >> 2));\n\n                        // c4\n                        c4 = base64DecodeChars[str.charCodeAt(i++)];\n                        if (c4 == -1) break;\n\n                        out[j++] = String.fromCharCode(((c3 & 0x03) << 6) | c4);\n                    }\n                    return out.join('');\n                };\n            }();\n        }\n\n        var arrayLikeObjectArgumentsEnabled = true;\n\n        try {\n            String.fromCharCode.apply(String, new Uint8Array([1, 2]));\n        }\n        catch (e) {\n            arrayLikeObjectArgumentsEnabled = false;\n            Object.defineProperty(Array.prototype, 'subarray', { value: Array.prototype.slice });\n        }\n\n        var DELTA = 0x9E3779B9;\n\n        function toUint8Array(v, includeLength) {\n            var length = v.length;\n            var n = length << 2;\n            if (includeLength) {\n                var m = v[length - 1];\n                n -= 4;\n                if ((m < n - 3) || (m > n)) {\n                    return null;\n                }\n                n = m;\n            }\n            var bytes = new Uint8Array(n);\n            for (var i = 0; i < n; ++i) {\n                bytes[i] = v[i >> 2] >> ((i & 3) << 3);\n            }\n            return bytes;\n        }\n\n        function toUint32Array(bytes, includeLength) {\n            var length = bytes.length;\n            var n = length >> 2;\n            if ((length & 3) !== 0) {\n                ++n;\n            }\n            var v;\n            if (includeLength) {\n                v = new Uint32Array(n + 1);\n                v[n] = length;\n            }\n            else {\n                v = new Uint32Array(n);\n            }\n            for (var i = 0; i < length; ++i) {\n                v[i >> 2] |= bytes[i] << ((i & 3) << 3);\n            }\n            return v;\n        }\n\n        function int32(i) {\n            return i & 0xFFFFFFFF;\n        }\n\n        function mx(sum, y, z, p, e, k) {\n            return ((z >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4)) ^ ((sum ^ y) + (k[p & 3 ^ e] ^ z));\n        }\n\n        function fixk(k) {\n            if (k.length < 16) {\n                var key = new Uint8Array(16);\n                key.set(k);\n                k = key;\n            }\n            return k;\n        }\n\n        function encryptUint32Array(v, k) {\n            var length = v.length;\n            var n = length - 1;\n            var y, z, sum, e, p, q;\n            z = v[n];\n            sum = 0;\n            for (q = Math.floor(6 + 52 / length) | 0; q > 0; --q) {\n                sum = int32(sum + DELTA);\n                e = sum >>> 2 & 3;\n                for (p = 0; p < n; ++p) {\n                    y = v[p + 1];\n                    z = v[p] = int32(v[p] + mx(sum, y, z, p, e, k));\n                }\n                y = v[0];\n                z = v[n] = int32(v[n] + mx(sum, y, z, n, e, k));\n            }\n            return v;\n        }\n\n        function decryptUint32Array(v, k) {\n            var length = v.length;\n            var n = length - 1;\n            var y, z, sum, e, p, q;\n            y = v[0];\n            q = Math.floor(6 + 52 / length);\n            for (sum = int32(q * DELTA); sum !== 0; sum = int32(sum - DELTA)) {\n                e = sum >>> 2 & 3;\n                for (p = n; p > 0; --p) {\n                    z = v[p - 1];\n                    y = v[p] = int32(v[p] - mx(sum, y, z, p, e, k));\n                }\n                z = v[n];\n                y = v[0] = int32(v[0] - mx(sum, y, z, 0, e, k));\n            }\n            return v;\n        }\n\n        function toBytes(str) {\n            var n = str.length;\n            // A single code unit uses at most 3 bytes.\n            // Two code units at most 4.\n            var bytes = new Uint8Array(n * 3);\n            var length = 0;\n            for (var i = 0; i < n; i++) {\n                var codeUnit = str.charCodeAt(i);\n                if (codeUnit < 0x80) {\n                    bytes[length++] = codeUnit;\n                }\n                else if (codeUnit < 0x800) {\n                    bytes[length++] = 0xC0 | (codeUnit >> 6);\n                    bytes[length++] = 0x80 | (codeUnit & 0x3F);\n                }\n                else if (codeUnit < 0xD800 || codeUnit > 0xDFFF) {\n                    bytes[length++] = 0xE0 | (codeUnit >> 12);\n                    bytes[length++] = 0x80 | ((codeUnit >> 6) & 0x3F);\n                    bytes[length++] = 0x80 | (codeUnit & 0x3F);\n                }\n                else {\n                    if (i + 1 < n) {\n                        var nextCodeUnit = str.charCodeAt(i + 1);\n                        if (codeUnit < 0xDC00 && 0xDC00 <= nextCodeUnit && nextCodeUnit <= 0xDFFF) {\n                            var rune = (((codeUnit & 0x03FF) << 10) | (nextCodeUnit & 0x03FF)) + 0x010000;\n                            bytes[length++] = 0xF0 | (rune >> 18);\n                            bytes[length++] = 0x80 | ((rune >> 12) & 0x3F);\n                            bytes[length++] = 0x80 | ((rune >> 6) & 0x3F);\n                            bytes[length++] = 0x80 | (rune & 0x3F);\n                            i++;\n                            continue;\n                        }\n                    }\n                    throw new Error('Malformed string');\n                }\n            }\n            return bytes.subarray(0, length);\n        }\n\n        function toShortString(bytes, n) {\n            var charCodes = new Array(n);\n            var i = 0, off = 0;\n            for (var len = bytes.length; i < n && off < len; i++) {\n                var unit = bytes[off++];\n                switch (unit >> 4) {\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                        charCodes[i] = unit;\n                        break;\n                    case 12:\n                    case 13:\n                        if (off < len) {\n                            charCodes[i] = ((unit & 0x1F) << 6) |\n                                (bytes[off++] & 0x3F);\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    case 14:\n                        if (off + 1 < len) {\n                            charCodes[i] = ((unit & 0x0F) << 12) |\n                                ((bytes[off++] & 0x3F) << 6) |\n                                (bytes[off++] & 0x3F);\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    case 15:\n                        if (off + 2 < len) {\n                            var rune = (((unit & 0x07) << 18) |\n                                ((bytes[off++] & 0x3F) << 12) |\n                                ((bytes[off++] & 0x3F) << 6) |\n                                (bytes[off++] & 0x3F)) - 0x10000;\n                            if (0 <= rune && rune <= 0xFFFFF) {\n                                charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                                charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                            }\n                            else {\n                                throw new Error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                            }\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    default:\n                        throw new Error('Bad UTF-8 encoding 0x' + unit.toString(16));\n                }\n            }\n            if (i < n) {\n                charCodes.length = i;\n            }\n            return String.fromCharCode.apply(String, charCodes);\n        }\n\n        function toLongString(bytes, n) {\n            var buf = [];\n            var charCodes = new Array(0x8000);\n            var i = 0, off = 0;\n            for (var len = bytes.length; i < n && off < len; i++) {\n                var unit = bytes[off++];\n                switch (unit >> 4) {\n                    case 0:\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                        charCodes[i] = unit;\n                        break;\n                    case 12:\n                    case 13:\n                        if (off < len) {\n                            charCodes[i] = ((unit & 0x1F) << 6) |\n                                (bytes[off++] & 0x3F);\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    case 14:\n                        if (off + 1 < len) {\n                            charCodes[i] = ((unit & 0x0F) << 12) |\n                                ((bytes[off++] & 0x3F) << 6) |\n                                (bytes[off++] & 0x3F);\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    case 15:\n                        if (off + 2 < len) {\n                            var rune = (((unit & 0x07) << 18) |\n                                ((bytes[off++] & 0x3F) << 12) |\n                                ((bytes[off++] & 0x3F) << 6) |\n                                (bytes[off++] & 0x3F)) - 0x10000;\n                            if (0 <= rune && rune <= 0xFFFFF) {\n                                charCodes[i++] = (((rune >> 10) & 0x03FF) | 0xD800);\n                                charCodes[i] = ((rune & 0x03FF) | 0xDC00);\n                            }\n                            else {\n                                throw new Error('Character outside valid Unicode range: 0x' + rune.toString(16));\n                            }\n                        }\n                        else {\n                            throw new Error('Unfinished UTF-8 octet sequence');\n                        }\n                        break;\n                    default:\n                        throw new Error('Bad UTF-8 encoding 0x' + unit.toString(16));\n                }\n                if (i >= 0x7FFF - 1) {\n                    var size = i + 1;\n                    charCodes.length = size;\n                    buf.push(String.fromCharCode.apply(String, charCodes));\n                    n -= size;\n                    i = -1;\n                }\n            }\n            if (i > 0) {\n                charCodes.length = i;\n                buf.push(String.fromCharCode.apply(String, charCodes));\n            }\n            return buf.join('');\n        }\n\n        function toString(bytes) {\n            var n = bytes.length;\n            if (n === 0) return '';\n            return ((n < 0xFFFF) ?\n                toShortString(bytes, n) :\n                toLongString(bytes, n));\n        }\n\n        function toArray(bytes) {\n            var n = bytes.length;\n            var a = new Array(bytes.length);\n            for (var i = 0; i < n; ++i) {\n                a[i] = bytes[i];\n            }\n            return a;\n        }\n\n        function toAsciiString(bytes) {\n            var n = bytes.length;\n            if (n === 0) return '';\n            var charCodes = (arrayLikeObjectArgumentsEnabled ? bytes : toArray(bytes));\n            if (n < 0xFFFF) {\n                return String.fromCharCode.apply(String, charCodes);\n            }\n            var remain = n & 0x7FFF;\n            var count = n >> 15;\n            var a = new Array(remain ? count + 1 : count);\n            for (var i = 0; i < count; ++i) {\n                a[i] = String.fromCharCode.apply(String, charCodes.subarray(i << 15, (i + 1) << 15));\n            }\n            if (remain) {\n                a[count] = String.fromCharCode.apply(String, charCodes.subarray(count << 15, n));\n            }\n            return a.join('');\n        }\n\n        function base64ToBytes(base64) {\n            var s = global.atob(base64);\n            var n = s.length;\n            var bytes = new Uint8Array(n);\n            for (var i = 0; i < n; i++) {\n                bytes[i] = s.charCodeAt(i);\n            }\n            return bytes;\n        }\n\n        function encrypt(data, key) {\n            if (typeof data === 'string') data = toBytes(data);\n            if (typeof key === 'string') key = toBytes(key);\n            if (data === undefined || data === null || data.length === 0) {\n                return data;\n            }\n            return toUint8Array(encryptUint32Array(toUint32Array(data, true), toUint32Array(fixk(key), false)), false);\n        }\n\n        function encryptToString(data, key) {\n            return global.btoa(toAsciiString(encrypt(data, key)));\n        }\n\n        function decrypt(data, key) {\n            if (typeof data === 'string') data = base64ToBytes(data);\n            if (typeof key === 'string') key = toBytes(key);\n            if (data === undefined || data === null || data.length === 0) {\n                return data;\n            }\n            return toUint8Array(decryptUint32Array(toUint32Array(data, false), toUint32Array(fixk(key), false)), true);\n        }\n\n        function decryptToString(data, key) {\n            return toString(decrypt(data, key));\n        }\n\n        global.XXTEA = Object.create(null, {\n            toBytes: { value: toBytes },\n            toString: { value: toString },\n            encrypt: { value: encrypt },\n            encryptToString: { value: encryptToString },\n            decrypt: { value: decrypt },\n            decryptToString: { value: decryptToString },\n\n            encryptToBase64: { value: encryptToString },\n            decryptFromBase64: { value: decryptToString },\n            encryptToBase64Ex1: { value: encryptToString },\n            decryptFromBase64Ex1: { value: decryptToString },\n\n        });\n        return global\n    }\n    //})(this || [eval][0]('this')\n\n    type xxteaTable = {\n        XXTEA: {\n            toBytes: (str: string) => Uint8Array,\n            toString: (str: Uint8Array) => string,\n            encrypt: (str: string | Uint8Array, key: string | Uint8Array) => Uint8Array,\n            encryptToString: (str: string | Uint8Array, key: string | Uint8Array) => string,\n            decrypt: (str: string | Uint8Array, key: string | Uint8Array) => Uint8Array,\n            decryptToString: (str: string | Uint8Array, key: string | Uint8Array) => string,\n\n            encryptToBase64: (str: string, key: string) => string,\n            decryptFromBase64: (str: string, key: string) => string\n            encryptToBase64Ex1: (str: string, key: string) => string,\n            decryptFromBase64Ex1: (str: string, key: string) => string\n        },\n        atob: (str: string) => string,\n        btoa: (str: string) => string,\n    }\n\n    let XXTEA: xxteaTable = makeModule({})\n    export let xxtea = XXTEA.XXTEA\n    // export let atob=xxtea.atob\n    // export let btoa=xxtea.btoa    \n}","namespace slib {\n\n    /**\n     * 数据传输类型\n     */\n    type BusinessContentType = \"json\" | \"protobuf\"\n\n    /**\n     * 支持的协议\n     */\n    type BusinessProtocol = \"http\" | \"https\" | \"ws\" | \"wss\"\n\n    type BusinessRequestData = {\n        /**\n         * 访问的api\n         */\n        action: string,\n        /**\n         * 发送的数据\n         */\n        data: any,\n        /**\n         * 请求的数据类型类型\n         */\n        requestType: string,\n        /**\n         * 响应的数据类型\n         */\n        responseType: string,\n        /**\n         * 是否展示请求菊花，默认flase\n         */\n        modal?: boolean,\n        /**\n         * 错误处理回调，如果不关心可以不传，将自动走全局错误处理逻辑\n         * @noSelf\n         */\n        errorCallback?: (error: any, retry: () => void) => void\n\n        /**\n         * 控制超时时间\n         */\n        timeout?: number\n    }\n\n    type BusinessRequestingData = BusinessRequestData & {\n        /**\n         * 当前请求的模态窗口id\n         */\n        requestIndex: number,\n\n        /**\n         * 当前是否为重试\n         */\n        isRetry: boolean,\n\n        /**\n         * 当前第几次重试\n         */\n        retryCount: number\n    }\n\n    export class BusinessClient {\n        /**\n         * 服务器地址 支持 http https ws wss 协议\n         * * 例如：http://sb.mosoga.net:8080/\n         */\n        readonly url: string;\n        readonly protocol: BusinessProtocol\n        readonly hostname: string\n        readonly port: number\n\n        /**\n         * 访问服务器的版本号，必须为整数\n         */\n        version?: string;\n\n        /**\n         * 访问服务器的所使用的数据类型\n         */\n        readonly contentType: BusinessContentType\n\n        /**\n         * 访问token\n         * * 每次http https 请求时都会携带\n         * * 第一次 ws 或 wss 请求时会携带\n         */\n        readonly token: string\n\n        /**\n         * 默认超时时间\n         */\n        readonly timeout: number\n\n        /**\n         * 所有请求都会+1\n         */\n        protected _requestIndex = 0;\n\n        /**\n         * 当前所加载的协议\n         */\n        protected _protocolContent: string | undefined = undefined;\n        /**\n         * 协议的包名\n         */\n        protected _packageName: string | undefined = undefined;\n\n        /**\n         * 全局错误处理函数\n         * @noSelf\n         */\n        errorCallback?: (error: any, retry: () => void) => void;\n\n        /**\n         * 显示模态层会掉\n         * @noSelf\n         */\n        showLoadingModalCallback?: (index: number, url: string) => void;\n\n        /**\n         * 隐藏模态遮挡层\n         * @noSelf\n         */\n        closeLoadingModalCallback?: (index: number, url: string) => void;\n\n\n        /**\n         * http客户端\n         */\n        protected _httpClient?: HttpClient;\n\n        constructor(data: {\n            /**\n             * 服务器地址\n             */\n            url: string,\n            /**\n             * 数据传输类型\n             */\n            contentType: BusinessContentType,\n            /**\n             * 身份token，从账号服获取\n             */\n            token: string,\n\n            /**\n             * 服务器版本号\n             */\n            version?: string,\n\n            /**\n             * 默认超过时时间\n             */\n            timeout?: number\n        }) {\n            this.url = data.url;\n            this.version = data.version;\n            this.contentType = data.contentType;\n            this.token = data.token;\n            this.timeout = data.timeout || 3000;\n\n            var matching = /([a-zA-Z]+):\\/\\/([\\w-.]+):?(\\d+)?/.exec(this.url.toLocaleLowerCase());\n            if (matching == null) {\n                throw new Error(`服务器地址格式错误：${this.url}`);\n            }\n            var [_, protocol, hostname, port] = matching;\n\n            if ([\"http\", \"https\", \"ws\", \"wss\"].indexOf(protocol) == -1) {\n                throw new Error(`服务器地址格式错误：${this.url}`);\n            }\n\n            if (port == null) {\n                if (protocol == \"http\") {\n                    port = \"80\";\n                } else if (protocol == \"https\") {\n                    port = \"443\";\n                } else if (protocol == \"ws\") {\n                    port = \"80\";\n                } else if (protocol == \"wss\") {\n                    port = \"443\";\n                }\n            } else {\n                if (parseInt(port).toString() != port) {\n                    throw new Error(`服务器地址格式错误：${this.url}`);\n                }\n            }\n            this.protocol = protocol as BusinessProtocol;\n            this.hostname = hostname;\n            this.port = parseInt(port);\n        }\n\n        /**\n         * 从业务服加载协议\n         */\n        loadProtocol(proto: string) {\n        }\n\n        /**\n         * 请求一个api\n         */\n        async request(data: BusinessRequestData) {\n            var requesting = data as BusinessRequestingData;\n            requesting.requestIndex = this._requestIndex++;\n            requesting.isRetry = false;\n            requesting.retryCount = 0;\n            return await this.requesting(requesting);\n        }\n\n        /**\n         * 请求过程中的逻辑\n         */\n        protected async requesting(data: BusinessRequestingData) {\n            if (this.protocol == \"http\" || this.protocol == \"https\") {\n                return await this.httpRequesting(data);\n            } else {\n                return await this.websocketRequesting(data);\n            }\n        }\n\n        /**\n         * 序列化请求数据\n         * @param data 请求数据（对象）\n         * @param type 目标类型\n         * @returns 返回字符串或二进制\n         */\n        protected serializeRequest(data: any, type: string): any {\n        }\n\n        /**\n         * 反序列化响应数据\n         * @param data 响应数据（二进制或字符串）\n         * @param type 目标类型\n         */\n        protected deserializationResponse(data: any, type: string): any {\n        }\n\n        protected httpRequesting(requestingData: BusinessRequestingData) {\n            return new Promise((resolve, reject) => {\n                if (this._httpClient == null) {\n                    this._httpClient = new HttpClient();\n                }\n\n                var url = `${this.protocol}://${this.hostname}:${this.port}/${this.version}/${requestingData.action}`\n\n                var headMap: { [key: string]: string } = {}\n                headMap[\"Content-Type\"] = this.contentType == \"json\" ? \"application/json;charset=utf-8\" : \"application/x-protobuf\";\n                headMap[\"Authorization\"] = this.token;\n\n                headMap[\"Request-Index\"] = requestingData.requestIndex.toString();\n                headMap[\"Retry-Count\"] = requestingData.retryCount.toString();\n\n                console.warn(\"[BusinessClient][request]\", url, JSON.stringify(headMap));\n\n                var requestData = requestingData.data;\n\n                //初次打开模态\n                if (!requestingData.isRetry && requestingData.modal && this.showLoadingModalCallback) {\n                    this.showLoadingModalCallback(requestingData.requestIndex, url);\n                }\n\n                var onError = (error: any, code?: number) => {\n                    //主动关闭模态\n                    if (requestingData.modal && this.closeLoadingModalCallback) {\n                        this.closeLoadingModalCallback(requestingData.requestIndex, url);\n                    }\n\n                    if (code == 202) {\n                        //业务错误\n                        let r = this.deserializationResponse(error, \"BusinessErrorVO\");\n                        console.error(\"[BusinessClient][response]\", code, url, JSON.stringify(headMap), JSON.stringify(r));\n                        reject({ type: \"business-error\", error: r })\n                    } else if (code == 500) {\n                        //内部服务器错误\n                        let r = this.deserializationResponse(error, \"InternalServerErrorVO\");\n                        console.error(\"[BusinessClient][response]\", code, url, JSON.stringify(headMap), JSON.stringify(r));\n                        reject({ type: \"internal-server-error\", error: r })\n                    } else {\n                        console.error(\"[BusinessClient][response]\", code, url, JSON.stringify(headMap), error);\n                    }\n\n                    //重试函数\n                    let retry = () => {\n                        //重新打开模态\n                        if (requestingData.modal && this.showLoadingModalCallback) {\n                            this.showLoadingModalCallback(requestingData.requestIndex, url);\n                        }\n                        requestingData.isRetry = true;\n                        requestingData.retryCount++;\n                        this.httpRequesting(requestingData);\n                    }\n                    if (requestingData.errorCallback) {\n                        //针对性错误处理\n                        requestingData.errorCallback(error, retry);\n                    } else if (this.errorCallback) {\n                        //全局错误处理\n                        this.errorCallback(error, retry);\n                    } else {\n                        //未处理网络错误\n                    }\n                    if (typeof error == \"string\" && error.indexOf('ssl hand shake error') != -1 || error.indexOf('证书无效') != -1) {\n                        console.error(\"[BusinessClient][response] ssl 握手错误\", url);\n                    }\n                }\n\n                var onDone = (responseData: any) => {\n                    //进行回调\n                    var result = this.deserializationResponse(responseData, requestingData.responseType);\n                    console.warn(\"[BusinessClient][response]\", url, JSON.stringify(headMap), JSON.stringify(result));\n                    //主动关闭模态\n                    if (requestingData.modal && this.closeLoadingModalCallback) {\n                        this.closeLoadingModalCallback(requestingData.requestIndex, url);\n                    }\n                    resolve(result);\n                }\n\n                this._httpClient.request({\n                    method: \"POST\",\n                    url: url,\n                    data: this.serializeRequest(requestData, requestingData.requestType),\n                    headMap: headMap,\n                    onDone: onDone,\n                    onError: onError,\n                    onTimeout: () => {\n                        //超时进行重试\n                        onError(\"timeout\");\n                    }\n                })\n            })\n        }\n\n        protected websocketRequesting(data: BusinessRequestingData) {\n\n        }\n\n    }\n}\n","namespace slib {\n\n    export abstract class GameClient {\n\n        protected _protocol: string = \"https\"//协议\n        protected _host: string = \"localhost\"//主机名\n        protected _port: number = 443//端口号\n\n        protected _messageCallback: Function\n        protected _errorCallback: (error: any, retry: () => void) => void;\n        protected _disconnectCallback: Function\n        protected _sslHandShakeErrorCallBack: (index: number, url: string) => void = null;  //客户端时间不对导致握手错误\n\n        protected _showLoadingModalCallback: (index: number, url: string) => void = null;//显示模态化遮挡层\n        protected _closeLoadingModalCallback: (index: number, url: string) => void = null;//隐藏模态遮挡层\n\n        constructor() {\n\n        }\n\n        /**\n         * 发起连接，如果已经连接将重新连接\n         */\n        abstract connect();\n\n        /**\n         * 发起对服务器的请求\n         */\n        abstract request(action, data, callback);\n\n        /**\n         * 设置服务器推送的消息回调\n         */\n        setMessageCallback(callback) {\n            this._messageCallback = callback\n        }\n\n        /**\n         * 当发生错误时的统一回调\n         */\n        setErrorCallback(callback: (error: any, retry: () => void) => void) {\n            this._errorCallback = callback;\n        }\n\n        /**\n         * 设置网络握手发生错误时的回调\n         */\n        public setSSLHandShakeErrorCallBack(callback: (index: number, url: string) => void) {\n            this._sslHandShakeErrorCallBack = callback;\n        }\n\n        /**\n         * 设置断开连接回调\n         */\n        setDisconnectCallback(callback) {\n            this._disconnectCallback = callback;\n        }\n\n        get host() {\n            return this._host\n        }\n\n        set host(value) {\n            this._host = value\n        }\n\n        get port() {\n            return this._port\n        }\n\n        set port(value) {\n            this._port = value\n        }\n\n        get protocol() {\n            return this._protocol\n        }\n\n        set protocol(value) {\n            this._protocol = value\n        }\n\n        set url(value: string) {\n            let sp = value.split(/:\\/\\/|:/g)\n            this._protocol = sp[0]\n            this._host = sp[1]\n            this._port = parseInt(sp[2])\n            if (this._port == null || isNaN(this._port)) {\n                if (this._protocol == \"http\") {\n                    this._port = 80\n                } else if (this._protocol == \"https\") {\n                    this._port = 443\n                } else if (this._protocol == \"ws\") {\n                    this._port = 80\n                } else if (this._protocol == \"wss\") {\n                    this._port = 443\n                }\n            }\n        }\n\n        get url(): string {\n            return `${this._protocol}://${this._host}:${this._port}`\n        }\n\n        public set showModalCallback(callback: (index: number, url: string) => void) {\n            this._showLoadingModalCallback = callback;\n        }\n\n        public set closeModalCallback(callback: (index: number, url: string) => void) {\n            this._closeLoadingModalCallback = callback;\n        }\n\n        public get showModalCallback() {\n            return this._showLoadingModalCallback;\n        }\n\n        public get closeModalCallback() {\n            return this._closeLoadingModalCallback;\n        }\n\n    }\n}","namespace slib {\n\n    type RequestParam = {\n        method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n        url: string,\n        data?: any,\n        timeout?: number,\n        headMap?: { [key: string]: string },\n        onDone?: (data: any, code?: number) => void,\n        onError?: (error: any, code?: number) => void,\n        onTimeout?: () => void,\n        onProgress?: (loaded: number, total: number) => void,\n        onUploadProgress?: (loaded: number, total: number) => void\n    }\n\n    export class HttpClient {\n        constructor() {\n        }\n\n        /**\n         * 对http发起请求\n         */\n        public request({ method = \"GET\",\n            url = null,\n            data = null,\n            timeout = 5000,\n            headMap = null,\n            onDone = null,\n            onError = null,\n            onTimeout = null,\n            onProgress = null,\n            onUploadProgress = null,\n        }: RequestParam) {\n\n            let http = new XMLHttpRequest();\n            let clearListener = () => {\n                http.onreadystatechange =\n                    http.onprogress =\n                    http.onabort =\n                    http.onerror =\n                    http.ontimeout = null;\n\n                if (http.upload) {\n                    http.upload.onprogress = null;\n                }\n            }\n\n            http.timeout = timeout\n            http.open(method, url, true);\n\n            http.onreadystatechange = (ev) => {\n                // console.log(\"onreadystatechange\", ev)\n                switch (http.readyState) {\n                    case 1://OPENED  (未发送)\n                        break;\n                    case 2://HEADERS_RECEIVED (已获取响应头)\n                        break;\n                    case 3://LOADING (正在下载响应体)\n                        break;\n                    case 4://DONE (请求完成)\n                        if (http.status == 200) {\n                            if (onDone) {\n                                if (http.responseType == \"json\" || http.responseType == \"text\" || http.responseType == \"document\") {\n                                    onDone(http.responseText || http.response, http.status);\n                                } else {\n                                    onDone(http.response || http.responseText, http.status);\n                                }\n                            }\n                        } else {\n                            if (onError) {\n                                if (http.responseType == \"json\" || http.responseType == \"text\" || http.responseType == \"document\") {\n                                    onError(http.responseText || http.response, http.status);\n                                } else {\n                                    onError(http.response || http.responseText, http.status);\n                                }\n                            }\n                        }\n                        clearListener();\n                        break;\n                }\n            }\n            http.onprogress = (ev) => {\n                // console.log(\"onprogress\", ev)\n                if (onProgress) {\n                    onProgress(ev.loaded, ev.total)\n                }\n            }\n            http.onabort = (ev) => {\n                // console.log(\"onabort\", ev)\n                if (onError) {\n                    onError(ev);\n                }\n                clearListener();\n            }\n            http.onerror = (ev) => {\n                // console.log(\"onerror\", ev)\n                if (onError) {\n                    onError(ev);\n                }\n                clearListener();\n            }\n            http.ontimeout = (ev) => {\n                // console.log(\"ontimeout\", ev)\n                if (onTimeout) {\n                    onTimeout();\n                }\n                clearListener();\n            }\n\n            if (http.upload && onUploadProgress) {\n                http.upload.onprogress = (ev) => {\n                    onUploadProgress(ev.loaded, ev.total)\n                }\n            }\n\n            if (headMap) {\n                for (let key in headMap) {\n                    let value = headMap[key]\n                    http.setRequestHeader(key, value);\n                }\n            }\n            http.send(data);\n\n        }\n\n    }\n}","namespace slib {\n\n    type HttpResponseData = {\n        succeed: boolean,\n        code: 0 | number,\n        message: \"success\" | string,\n        ts: number,\n        map_min_v: { min: string, max: string },\n        errorcode: string,\n        data: any\n    }\n    type HttpRequestData = { appId: any, role: any, index: number, retry: number, data: any }\n\n    let log: Log = new Log({ tags: [\"HttpClient\"] })\n    export class HttpGameClient extends GameClient {\n        protected _client: HttpClient = new HttpClient()\n        protected _requestIndex = 0;\n        protected _retryCount: number = 3;\n        protected _timeout: number = 5000;\n\n        public searchExt: () => string;\n        public debugURL: string = null\n        constructor() {\n            super()\n        }\n\n        /**\n         * 统计服务器请求时间，返回接口名称和毫秒数\n         * @noSelf\n         */\n        public static timeStatisticsCallback: (name: string, millisecond: number) => void;\n\n        connect() {\n            //http 不需要连接\n        }\n\n        /**\n         * 获取是否添加日志测试标记\n         */\n        public getLogTest: () => boolean = null;\n\n        /**\n         * 获取token对外接口\n         */\n        public getToken: () => string = null;\n\n        /**\n         * 获取账号服返回的gametoken\n         */\n        public getGameToken: () => string = null;\n\n        /**\n         * 获取openId\n         */\n        public getOpenId: () => string = null;\n\n        /**\n         * 获取roleId对外接口\n         */\n        public getRoleId: () => string = null;\n\n        /**\n         * 获取appid\n         */\n        public getAppId: () => string = () => {\n            throw new Error(\"未设置APPID\")\n        };\n\n        protected _loadingIndex: number = 0\n        /**\n         * 获取loading索引\n         */\n        public getLoadingIndex: () => number = () => {\n            return this._loadingIndex++;\n        };\n\n        public set timeout(value: number) {\n            this._timeout = value;\n        }\n\n\n        /**\n         * 发起服务器请求\n         * @param action 请求的相对url\n         * @param data 请求的数据\n         * @param callback 请求的回调\n         * ### 扩展数据\n         * * version 访问云函数的版本号\n         * * tag 访问云函数的tag\n         * * name 访问云函数的名称\n         * * modal 是否模态窗口\n         * * downloadProgress 下载进度\n         * * uploadProgress 上传进度\n         * * errorCallback 错误回调 这里可以拿到retry函数\n         */\n        request(action, data, callback: (data: HttpResponseData) => void,\n            { version, tag, name, modal, downloadProgress, uploadProgress, errorCallback, customUrl }: {\n                version?: number,\n                tag?: string,\n                name?: string,\n                modal?: boolean,\n                downloadProgress?: (loaded: number, total: number) => void,\n                uploadProgress?: (loaded: number, total: number) => void,\n                errorCallback?: (error: any, retry: () => void) => void,\n                customUrl?: string,\n            } = {}\n        ) {\n            this._requestIndex++;//每次请求拥有新的id\n            var requestData = {\n                appId: this.getAppId ? this.getAppId() : undefined,\n                role: this.getRoleId ? this.getRoleId() : undefined,//请求用户\n                // token:this._token,//token\n                index: this._requestIndex,//请求索引\n                retry: 0,//是否重试\n                v: version,\n                t: tag,\n                name: name,\n                data: data\n            }\n            if (window[\"gdkjsb\"] && window[\"gdkjsb\"].isCustomBackendCfg && window[\"gdkjsb\"].packageTag) {\n                requestData[\"packageCfgKey\"] = window[\"gdkjsb\"].packageTag\n            }\n\n            this.requestFromData(action, requestData, callback, { modal, downloadProgress, uploadProgress, errorCallback, customUrl });\n        }\n\n        protected requestFromData(action, requestData: HttpRequestData, callback: (data: HttpResponseData) => void,\n            { modal, downloadProgress, uploadProgress, errorCallback, customUrl }: { modal?: boolean, downloadProgress?: (loaded: number, total: number) => void, uploadProgress?: (loaded: number, total: number) => void, errorCallback?: (error: any, retry: () => void) => void, customUrl?: string } = {},\n            isRetry = false, modalIndex = -1\n        ) {\n\n            let data = JSON.stringify(requestData)\n            if (typeof (data) == 'string' && data.length > 1200) {\n                log.warn(\"request\", action, ':', [data]);\n            } else {\n                log.warn(\"request\", action, data);\n            }\n\n            let search = this.searchExt ? this.searchExt() : \"\";\n\n            let url: string\n            if (this._protocol == \"https\" && this._port == 443) {\n                url = `${this._protocol}://${this._host}/${action}${search}`\n            } else if (this._protocol == \"http\" && this._port == 80) {\n                url = `${this._protocol}://${this._host}/${action}${search}`\n            } else {\n                url = `${this._protocol}://${this._host}:${this._port}/${action}${search}`\n            }\n            if (this.debugURL) {\n                url = `${this.debugURL}/${action}${search}`\n            }\n            if (customUrl) {\n                url = `${customUrl}/${action}${search}`\n            }\n\n\n            let index = modalIndex == -1 ? this.getLoadingIndex() : modalIndex\n            //重试不重复打开模态\n            if (!isRetry && modal && this._showLoadingModalCallback) {\n                this._showLoadingModalCallback(index, action);\n            }\n\n            let token = this.getToken ? this.getToken() : undefined\n\n            let headMap: any = {}\n            headMap[\"Content-Type\"] = \"application/json;charset=utf-8\"\n            if (token) {\n                headMap[\"token\"] = token\n            }\n            if (this.getRoleId && this.getRoleId()) {\n                headMap[\"role\"] = this.getRoleId()\n            }\n            if (this.getOpenId && this.getOpenId()) {\n                headMap[\"openId\"] = this.getOpenId()\n            }\n            let httpReferer = \"http://glee.com/info?\"\n            if (this.getAppId && this.getAppId()) {\n                headMap[\"appId\"] = this.getAppId()\n                httpReferer = httpReferer + \"appId=\" + this.getAppId()\n            }\n\n            if (this.getGameToken && this.getGameToken()) {\n                headMap[\"Authorization\"] = \"Bearer \" + this.getGameToken();\n\n                //进行数据签名\n                let sign = data\n                if (token != null) {\n                    sign = token.substr(token.length / 2) + data\n                }\n                sign = MD5.hex(sign);\n                headMap[\"sign\"] = sign;\n                // console.log(\"sign\", sign)\n            }\n\n            if (this.getLogTest && this.getLogTest()) {\n                headMap[\"logTest\"] = true;\n            }\n            headMap[\"uiLanguage\"] = slib.i18n.language\n\n            //自动添加 country language\n            if (window[\"gdkjsb\"] && window[\"gdkjsb\"].language && window[\"gdkjsb\"].country) {\n                headMap[\"language\"] = window[\"gdkjsb\"].language\n                headMap[\"country\"] = window[\"gdkjsb\"].country\n                if (window[\"gdkjsb\"].packageTag) {\n                    httpReferer = httpReferer + \"&packageTag=\" + window[\"gdkjsb\"].packageTag\n                }\n\n                if (window[\"gdkjsb\"].versionCode) {\n                    httpReferer = httpReferer + \"&versionCode=\" + window[\"gdkjsb\"].versionCode\n                }\n                headMap[\"Referer\"] = httpReferer\n            }\n\n            var startTime = Date.now();\n            this._client.request({\n                method: \"POST\",\n                url: url,\n                data: data,\n                headMap: headMap,\n                timeout: this._timeout,\n                onDone: (data) => {\n                    //进行回调\n                    if (typeof (data) == 'string' && data.length > 1200) {\n                        log.warn(\"response\", url, action, ':', [data])\n                    } else {\n                        log.warn(\"response\", url, action, data);\n                    }\n\n                    let newData = JSON.parse(data);\n                    if (newData.ok != undefined) {\n                        callback({\n                            succeed: newData.ok,\n                            code: newData.c,\n                            message: newData.m,\n                            ts: newData.ts,\n                            map_min_v: newData.map_min_v,\n                            errorcode: newData.errorcode,\n                            data: newData.r\n                        });\n                    } else {\n                        callback(newData);\n                    }\n\n                    if (modal && this._closeLoadingModalCallback) {\n                        this._closeLoadingModalCallback(index, action);\n                    }\n\n                    if (HttpGameClient.timeStatisticsCallback != null) {\n                        HttpGameClient.timeStatisticsCallback(action, Date.now() - startTime);\n                    }\n                },\n                onError: (error) => {\n\n                    let retry = () => {\n                        //重试函数\n                        if (modal) {\n                            this._showLoadingModalCallback(index, action);\n                        }\n                        requestData.retry++\n                        this.requestFromData(action, requestData, callback, { modal: modal, downloadProgress: downloadProgress, uploadProgress: uploadProgress, errorCallback: errorCallback, customUrl }, true, index);\n                    }\n\n                    if (requestData.retry > this._retryCount) {\n                        //多次请求无果\n\n                        if (errorCallback) {\n                            errorCallback(error, retry);//当请求捕获错误时，则不进行全局错误回调\n                        } else if (this._errorCallback) {\n                            this._errorCallback(error, retry)\n                        }\n                        if (modal && this._closeLoadingModalCallback) {\n                            this._closeLoadingModalCallback(index, action);\n                        }\n                        log.error(\"多次请求无果: \" + url);\n                    } else {\n                        requestData.retry++\n                        this.requestFromData(action, requestData, callback, { modal: modal, downloadProgress: downloadProgress, uploadProgress: uploadProgress, errorCallback: errorCallback, customUrl }, true, index);\n                    }\n                    log.error(error);\n                    if (error && requestData.retry > this._retryCount && ((error as string).indexOf('ssl hand shake error') != -1 || (error as string).indexOf('证书无效') != -1)) {\n                        if (this._sslHandShakeErrorCallBack) {\n                            this._sslHandShakeErrorCallBack(index, action)\n                        }\n                    }\n                },\n                onTimeout: () => {\n                    //超时进行重试\n\n                    let retry = () => {\n                        //重试函数\n                        if (modal) {\n                            this._showLoadingModalCallback(index, action);\n                        }\n                        requestData.retry++\n                        this.requestFromData(action, requestData, callback, { modal: modal, downloadProgress: downloadProgress, uploadProgress: uploadProgress, customUrl }, true, index);\n                    }\n\n                    if (requestData.retry > this._retryCount) {\n                        //多次请求无果\n                        if (errorCallback) {\n                            errorCallback(\"timeout\", retry);//当请求捕获错误时，则不进行全局错误回调\n                        } else if (this._errorCallback) {\n                            this._errorCallback(\"timeout\", retry)\n                        }\n                        if (modal && this._closeLoadingModalCallback) {\n                            this._closeLoadingModalCallback(index, action);\n                        }\n                        log.error(\"多次请求无果: \" + url);\n                    } else {\n                        requestData.retry++\n                        this.requestFromData(action, requestData, callback, { modal: modal, downloadProgress: downloadProgress, uploadProgress: uploadProgress, customUrl }, true, index);\n                    }\n                },\n                onProgress: (loaded: number, total: number) => {\n                    if (downloadProgress) {\n                        downloadProgress(loaded, total)\n                    }\n                },\n                onUploadProgress: (loaded: number, total: number) => {\n                    if (uploadProgress) {\n                        uploadProgress(loaded, total)\n                    }\n                }\n            })\n        }\n\n        get retryCount() {\n            return this._retryCount\n        }\n        set retryCount(value) {\n            this._retryCount = value\n        }\n\n        get client() {\n            return this._client;\n        }\n    }\n}","namespace slib {\n    type SocketResponseData = { index: number, code: string, success: boolean, data: any }\n    type SocketRequestData = { index: number, code: string, data: any }\n    type SocketRequestInfo = {\n        index: number,\n        code: string,\n        callback: (msg: object, netDelay: number) => void,\n        modal: boolean,\n        time: number\n    }\n\n    let log: Log = new Log({ tags: [\"SocketClient\"] })\n    export class SocketGameClient extends GameClient {\n        protected _client: WebSocket\n        protected _requestIndex = 0;\n        protected _connected: boolean = false;\n        protected _connecting: boolean = false;\n\n        protected _callIndex: number = 0;\n        protected _serverCallbackList: Array<SocketRequestInfo> = []//等待服务器回调的请求\n\n        protected _connectCallback: () => void = null;//连接成功回调\n\n        protected _heartbeatIntervalHandler: any = null;\n        protected _heartbeatInterval: number = 5000;//心跳时间间隔\n        protected _receiveHeartbeat: boolean = true;//是否已经收到心跳数据\n\n        protected _messageTime: number = 0;//最近一次收到数据的时间\n\n        constructor() {\n            super()\n        }\n\n        connect(callback: () => void = null) {\n            if (this._connecting || this._connected)\n                return;\n\n            this._client = new WebSocket(`${this._protocol}://${this._host}:${this._port}`);\n\n            this._client.onopen = (ev: Event) => { this.onOpenHandler(ev) };\n            this._client.onclose = (ev: CloseEvent) => { this.onCloseHandler(ev) };\n            this._client.onmessage = (ev: MessageEvent) => { this.onMessageHandler(ev) };\n            this._client.onerror = (ev: Event) => { this.onErrorHandler(ev) };\n\n            this._connecting = true;\n            this._serverCallbackList = [];//清空请求列表\n\n            this._connectCallback = callback;\n        }\n\n        protected startHeartbeat() {\n            if (this._heartbeatIntervalHandler !== null) {\n                return;\n            }\n            this._receiveHeartbeat = true;\n            this._heartbeatIntervalHandler = setInterval(() => {\n\n                if (this._receiveHeartbeat == false) {\n                    log.error(\"心跳没了\");\n                    this.stopHeartbeat();\n                    this._client.close();\n                }\n\n                //当间隔内收到过网络数据，则不发送心跳。降低心跳数量。\n                if (this._messageTime + this._heartbeatInterval <= new Date().getTime()) {\n                    this._client.send(\"HB\");\n                    this._receiveHeartbeat = false;\n                    log.warn(\"发送心跳\")\n                }\n\n            }, this._heartbeatInterval);\n        }\n        protected stopHeartbeat() {\n            clearInterval(this._heartbeatIntervalHandler)\n            this._heartbeatIntervalHandler = null;\n        }\n\n        public onOpenHandler(ev: Event): any {\n            this._connecting = false;\n            this._connected = true;\n\n            if (this._connectCallback) {\n                this._connectCallback();\n            }\n\n            this.startHeartbeat();\n        }\n\n        public onCloseHandler(ev: CloseEvent): any {\n            this._connected = false;\n            this._connecting = false;\n\n            //由于已经断开，所有请求都会失效，因此模态都要隐藏掉\n            for (var i = 0; i < this._serverCallbackList.length; i++) {\n                var call = this._serverCallbackList[i];\n                if (call.modal && this._closeLoadingModalCallback) {\n                    this._closeLoadingModalCallback(call.index, call.code)\n                }\n            }\n\n            this._client = null;\n\n            //前端应该弹出提示框，让玩家重连等\n            if (this._disconnectCallback)\n                this._disconnectCallback()\n\n            this.stopHeartbeat();\n        }\n\n        public onMessageHandler(ev: MessageEvent): any {\n\n            this._messageTime = new Date().getTime();\n\n            var bytes = ev.data as string\n            if (bytes == \"HB\") {\n                this._receiveHeartbeat = true;\n                log.warn(\"收到心跳\")\n                return;\n            }\n\n            log.warn(\"收到数据\", bytes)\n\n            let sp1 = bytes.indexOf(\" \")\n            let sp2 = bytes.indexOf(\" \", sp1 + 1)\n            let type = bytes.substr(0, sp1)\n            let action = bytes.substr(sp1 + 1, sp2 - sp1 - 1)\n            let data = bytes.substr(sp2 + 1)\n\n            if (type == '1') {\n                //调用的回调\n                let sp = JSON.parse(data) as SocketResponseData\n                for (var i = 0; i < this._serverCallbackList.length; i++) {\n                    var callback = this._serverCallbackList[i];\n                    let netDelay = new Date().getTime() - callback.time\n                    log.warn(callback.code, \"延迟\", netDelay)\n                    if (callback.index == sp.index) {\n                        try {\n                            callback.callback(sp, netDelay);\n                        } catch (e) {\n                            log.error(e)\n                        }\n                        this._serverCallbackList.splice(i, 1);\n\n                        if (callback.modal && this._closeLoadingModalCallback) {\n                            this._closeLoadingModalCallback(sp.index, sp.code)\n                        }\n\n                        break;\n                    }\n                }\n\n            } else if (type == '2') {\n                //服务器通知\n                this._messageCallback(action, JSON.parse(data));\n            } else {\n                log.error(\"未知的数据格式\", bytes)\n            }\n\n        }\n\n\n        public onErrorHandler(ev: Event): any {\n            this._connected = false;\n            this._connecting = false;\n\n            //由于已经断开，所有请求都会失效，因此模态都要隐藏掉\n            for (var i = 0; i < this._serverCallbackList.length; i++) {\n                var call = this._serverCallbackList[i];\n                if (call.modal && this._closeLoadingModalCallback) {\n                    this._closeLoadingModalCallback(call.index, call.code)\n                }\n            }\n\n            this._client = null;\n\n            if (this._errorCallback)\n                this._errorCallback(ev, null);\n\n            this.stopHeartbeat();\n        }\n\n        public get connected(): boolean {\n            return this._connected;\n        }\n\n        public get connecting(): boolean {\n            return this._connecting;\n        }\n\n        request(action: string, data: any, callback: (data: SocketResponseData) => void, modal: boolean = false) {\n            assert(this._connected, \"必须在连接状态才能发送请求\")\n\n            this._requestIndex++;//每次请求拥有新的id\n            var requestData: SocketRequestData = {\n                index: this._requestIndex,\n                code: action,\n                data: data\n            }\n            let pack = `${action} ${JSON.stringify(requestData)}`\n            let info = {\n                index: requestData.index,\n                code: action,\n                callback: callback,\n                modal: modal,\n                time: new Date().getTime()//发起请求的时间\n            }\n            this._serverCallbackList.push(info)\n\n            if (modal && this._showLoadingModalCallback) {\n                this._showLoadingModalCallback(requestData.index, action)\n            }\n\n            log.warn(\"请求数据\", pack)\n            this._client.send(pack);\n        }\n\n        close() {\n            //断开现有连接\n            this.stopHeartbeat();\n            if (this._client) {\n                try {\n                    this._client.close();\n                } catch{ }\n                this._client = null\n            }\n            this._connected = false\n            this._connecting = false\n        }\n\n    }\n}","","\n    // // test case\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     if (bshift23decodeV2(bshift23encodeV2(String.fromCharCode(i))) != String.fromCharCode(i)) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = bshift23encodeV2(String.fromCharCode(i))\n    //     if (c.length > 1) {\n    //         if (c.charCodeAt(0) != ox8000) {\n    //             console.error(\"invalid\", i)\n    //             throw new Error('lkjl')\n    //         }\n    //         if (c.charCodeAt(1) >= ox8000) {\n    //             console.error(\"invalid\", i)\n    //             throw new Error('lkjl')\n    //         }\n    //     } else {\n    //         if (c.charCodeAt(0) >= ox8000) {\n    //             console.error(\"invalid\", i)\n    //             throw new Error('lkjl')\n    //         }\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + String.fromCharCode(i + 3)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + String.fromCharCode(i) + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + 'j' + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = String.fromCharCode(i) + 'j' + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = String.fromCharCode(i) + String.fromCharCode(i) + String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = String.fromCharCode(i) + String.fromCharCode(i)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = 'j' + String.fromCharCode(i) + String.fromCharCode(3) + String.fromCharCode(i + 7) + String.fromCharCode(i + 13)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = String.fromCharCode(i) + String.fromCharCode(i + 23)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // for (let i = 0; i <= 0xFFFF; i++) {\n    //     const c = String.fromCharCode(i) + String.fromCharCode(i + 3) + String.fromCharCode(i + 19) + String.fromCharCode(i + 17)\n    //     if (bshift23decodeV2(bshift23encodeV2(c)) != c) {\n    //         console.error('i:' + i)\n    //         throw new Error('lkj')\n    //     }\n    // }\n    // console.log('end')\n    // // test case end\n"]}